<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:vm="using:AutoJobSearchGUI.ViewModels"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
			 xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="600"
             x:Class="AutoJobSearchGUI.Views.JobBoardView"
			 x:DataType="vm:JobBoardViewModel">

	<Design.DataContext>
		<!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
		<vm:JobBoardViewModel/>
	</Design.DataContext>

	<DockPanel>
		<StackPanel 
			DockPanel.Dock="Top" 
			Orientation="Horizontal" 
			HorizontalAlignment="Center"
			Spacing="10"
			Margin="5" >
			<Menu
				BorderBrush="Gray"
				BorderThickness="0.8"
				CornerRadius="3">
				<MenuItem
					Header="Open Selected Job"
					Command="{Binding OpenJobListingCommand}" />
			</Menu>
			<Menu
				BorderBrush="Gray"
				BorderThickness="0.8"
				CornerRadius="3">
				<MenuItem
					Header="Previous Page"
					Command="{Binding GoToPreviousPageCommand}" />
			</Menu>
			<Menu
				BorderBrush="Gray"
				BorderThickness="0.8"
				CornerRadius="3">
				<MenuItem
					Header="Next Page"
					Command="{Binding GoToNextPageCommand}" />
			</Menu>
			<Menu 
				BorderBrush="Gray"
				BorderThickness="0.8"
				CornerRadius="3">
				<MenuItem Header="Advanced Query">
					<MenuItem Header="Column Filters">
						<CheckBox Content="Enable Query Filter" FontWeight="ExtraBold" IsChecked="{Binding JobBoardQueryModel.ColumnFiltersEnabled}" ClickMode="Press" />
						<CheckBox Content="To Be Applied To" IsChecked="{Binding JobBoardQueryModel.IsToBeAppliedTo}" ClickMode="Press"/>
						<CheckBox Content="Applied" IsChecked="{Binding JobBoardQueryModel.IsAppliedTo}" ClickMode="Press"/>
						<CheckBox Content="Interviewing" IsChecked="{Binding JobBoardQueryModel.IsInterviewing}" ClickMode="Press"/>
						<CheckBox Content="Negotiating" IsChecked="{Binding JobBoardQueryModel.IsNegotiating}" ClickMode="Press"/>
						<CheckBox Content="Rejected" IsChecked="{Binding JobBoardQueryModel.IsRejected}" ClickMode="Press"/>
						<CheckBox Content="Declined Offer" IsChecked="{Binding JobBoardQueryModel.IsDeclinedOffer}" ClickMode="Press"/>
						<CheckBox Content="Accepted Offer" IsChecked="{Binding JobBoardQueryModel.IsAcceptedOffer}" ClickMode="Press"/>
						<CheckBox Content="Favourite" IsChecked="{Binding JobBoardQueryModel.IsFavourite}" ClickMode="Press"/>
					</MenuItem>
					<MenuItem Header="Search Term Query">
						<CheckBox Content="Enable Query Filter" FontWeight="ExtraBold" IsChecked="{Binding JobBoardQueryModel.SearchTermQueryStringEnabled}" ClickMode="Press"/>
						<TextBox Text="{Binding JobBoardQueryModel.SearchTermQueryString}" IsReadOnly="False" MaxWidth="250" />
					</MenuItem>
					<MenuItem Header="Job Description Query">
						<CheckBox Content="Enable Query Filter" FontWeight="ExtraBold" IsChecked="{Binding JobBoardQueryModel.JobDescriptionQueryStringEnabled}" ClickMode="Press"/>
						<TextBox Text="{Binding JobBoardQueryModel.JobDescriptionQueryString}" IsReadOnly="False" MaxWidth="250" />
					</MenuItem>
					<MenuItem Header="Notes Query">
						<CheckBox Content="Enable Query Filter" FontWeight="ExtraBold" IsChecked="{Binding JobBoardQueryModel.NotesQueryStringEnabled}" ClickMode="Press"/>
						<TextBox Text="{Binding JobBoardQueryModel.NotesQueryString}" IsReadOnly="False" MaxWidth="250" />
					</MenuItem>
					<MenuItem Header="Creation Date">
						<CheckBox 
								Content="Enable Created At Date" 
								FontWeight="ExtraBold"
								IsChecked="{Binding JobBoardQueryModel.CreatedAtDateEnabled}"
								IsEnabled="{Binding !JobBoardQueryModel.CreatedBetweenDatesEnabled}" 
								ClickMode="Press"/>
						<CheckBox 
								Content="Enable Created Between Dates" 
								FontWeight="ExtraBold"
								IsChecked="{Binding JobBoardQueryModel.CreatedBetweenDatesEnabled}"
								IsEnabled="{Binding !JobBoardQueryModel.CreatedAtDateEnabled}" 
								ClickMode="Press"/>
						<MenuItem Header="Created At Date">
							<DatePicker SelectedDate="{Binding JobBoardQueryModel.CreatedAtDate}" />
						</MenuItem>
						<MenuItem Header="Created Between Dates">
							<DatePicker SelectedDate="{Binding JobBoardQueryModel.CreatedBetweenDateStart}" />
							<DatePicker SelectedDate="{Binding JobBoardQueryModel.CreatedBetweenDateEnd}" />
						</MenuItem>
					</MenuItem>
					<MenuItem Header="Status Modified Date">
						<CheckBox
								Content="Enable Modified At Date"
								FontWeight="ExtraBold"
								IsChecked="{Binding JobBoardQueryModel.ModifiedAtDateEnabled}"
								IsEnabled="{Binding !JobBoardQueryModel.ModifiedBetweenDatesEnabled}"
								ClickMode="Press"/>
						<CheckBox
								Content="Enable Modified Between Dates"
								FontWeight="ExtraBold"
								IsChecked="{Binding JobBoardQueryModel.ModifiedBetweenDatesEnabled}"
								IsEnabled="{Binding !JobBoardQueryModel.ModifiedAtDateEnabled}"
								ClickMode="Press"/>
						<MenuItem Header="Modified At Date">
							<DatePicker SelectedDate="{Binding JobBoardQueryModel.ModifiedAtDate}" />
						</MenuItem>
						<MenuItem Header="Modified Between Dates">
							<DatePicker SelectedDate="{Binding JobBoardQueryModel.ModifiedBetweenDateStart}" />
							<DatePicker SelectedDate="{Binding JobBoardQueryModel.ModifiedBetweenDateEnd}" />
						</MenuItem>
					</MenuItem>
					<MenuItem Header="Score">
						<CheckBox
							   Content="Enable Equals"
							   FontWeight="ExtraBold"
							   IsChecked="{Binding JobBoardQueryModel.ScoreEqualsEnabled}"
							   IsEnabled="{Binding !JobBoardQueryModel.ScoreRangeEnabled}" 
							   ClickMode="Press"/>
						<CheckBox
							   Content="Enable Range"
							   FontWeight="ExtraBold"
							   IsChecked="{Binding JobBoardQueryModel.ScoreRangeEnabled}"
							   IsEnabled="{Binding !JobBoardQueryModel.ScoreEqualsEnabled}" 
							   ClickMode="Press"/>
						<MenuItem Header="Equals">
							<!--Application displays error if user manually deletes all numbers inside these controls
							(using backspace or delete on keyboard). No way to prevent this.-->
							<NumericUpDown Value="{Binding JobBoardQueryModel.ScoreEquals}" FormatString="0" />
						</MenuItem>
						<MenuItem Header="Within Range">
							<NumericUpDown Value="{Binding JobBoardQueryModel.ScoreRangeMin}" FormatString="0" />
							<NumericUpDown Value="{Binding JobBoardQueryModel.ScoreRangeMax}" FormatString="0" />
						</MenuItem>
					</MenuItem>
					<MenuItem Header="Sort By">
						<CheckBox Content="Search Term" IsChecked="{Binding JobBoardQueryModel.SortBySearchTerm}" ClickMode="Press"/>
						<CheckBox Content="Score" IsChecked="{Binding JobBoardQueryModel.SortByScore}" ClickMode="Press"/>
						<CheckBox Content="Creation Date" IsChecked="{Binding JobBoardQueryModel.SortByCreatedAt}" ClickMode="Press"/>
						<CheckBox Content="Status Modified Date" IsChecked="{Binding JobBoardQueryModel.SortByModifiedAt}" ClickMode="Press"/>
					</MenuItem>
					<MenuItem Header="Order By">
						<CheckBox 
							Content="Ascending" 
							IsChecked="{Binding JobBoardQueryModel.OrderByAscending}" 
							ClickMode="Press" />
					</MenuItem>
					<Button
						Content="Execute Query"
						HorizontalAlignment="Center"
						Command="{Binding ExecuteQueryCommand}"
						ClickMode="Press"/>
					<Button
						Content="Get Archived/Hidden Jobs"
						HorizontalAlignment="Center"
						Command="{Binding RenderHiddenJobsCommand}"
						ClickMode="Press"/>
					<Button
						Content="Get Favourite Jobs"
						HorizontalAlignment="Center"
						Command="{Binding RenderFavouriteJobsCommand}"
						ClickMode="Press"/>
					<Button
						Content="Clear All Filters"
						HorizontalAlignment="Center"
						Command="{Binding RenderDefaultJobBoardViewCommand}"
						ClickMode="Press"/>
				</MenuItem>
			</Menu>
			<Menu 
				BorderBrush="Gray"
				BorderThickness="0.8"
				CornerRadius="3">
				<MenuItem Header="Options">
					<MenuItem Header="Go To Default View" Command="{Binding RenderDefaultJobBoardViewCommand}" />
					<MenuItem Header="Add New Job" Command="{Binding CreateJobCommand}" />
					<MenuItem Header="Open Job By Id">
						<TextBox
							x:Name="JobIdTextBox"
							Watermark="Enter Job ID (integer number)" />
						<MenuItem
							Header="Open Job"
							Command="{Binding OpenJobByIdCommand}"
							CommandParameter="{Binding Text, ElementName=JobIdTextBox}" />
					</MenuItem>
					<MenuItem Header="Delete All Records" Command="{Binding DeleteAllRecordsCommand}" />
					<MenuItem Header="Jobs Per Page">
						<NumericUpDown
							Maximum="100"
							Minimum="1"
							Increment="5"
							Value="{Binding PageSize}"
							FormatString="0" />
					</MenuItem>
				</MenuItem>
			</Menu>
		</StackPanel>
		<DataGrid
	 		CanUserResizeColumns="True"
			CanUserReorderColumns="True"
	 		ItemsSource="{Binding JobListingsDisplayed}"
			SelectedItem="{Binding SelectedJobListing}"
			RowHeight="150"
			GridLinesVisibility="Horizontal"
			HorizontalGridLinesBrush="Gray"  
			IsScrollInertiaEnabled="True">
			<i:Interaction.Behaviors>
				<ia:EventTriggerBehavior EventName="DoubleTapped">
					<ia:InvokeCommandAction Command="{Binding OpenJobListingCommand}"/>
				</ia:EventTriggerBehavior>
			</i:Interaction.Behaviors>
			<DataGrid.ContextMenu>
				<ContextMenu>
					<MenuItem Header="Archive/Hide Job" Command="{Binding HideJobCommand}" />
					<MenuItem Header="Delete Job" Command="{Binding DeleteJobCommand}" />
				</ContextMenu>
			</DataGrid.ContextMenu>
			<DataGrid.Columns>
				<DataGridTextColumn 
					Header="Search Term" 
					Binding="{Binding SearchTerm}" 
					IsReadOnly="True" 
					Width="1.1*" />
				<DataGridTextColumn 
					Header="Created At" 
					Binding="{Binding CreatedAt}" 
					IsReadOnly="True"
					Width="1.1*" />
				<DataGridTextColumn
					Header="Status Modified At"
					Binding="{Binding StatusModifiedAt}"
					IsReadOnly="True"
					Width="1.1*" />
				<DataGridTemplateColumn 
					Header="Job Description" 
					Width="1.1*">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>
							<TextBlock 
								Text="{Binding Description}" 
								TextWrapping="Wrap" />
						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>
				<DataGridTextColumn 
					Header="Score" 
					Binding="{Binding Score}" 
					IsReadOnly="True"
					Width="0.5*" />
				<DataGridCheckBoxColumn
					Header="To Be Applied To"
					Binding="{Binding IsToBeAppliedTo}"
					Width="0.5*" />
				<DataGridCheckBoxColumn 
					Header="Applied" 
					Binding="{Binding IsAppliedTo}"
					Width="0.5*" />
				<DataGridCheckBoxColumn 
					Header="Interviewing" 
					Binding="{Binding IsInterviewing}"
					Width="0.5*" />
				<DataGridCheckBoxColumn
					Header="Negotiating"
					Binding="{Binding IsNegotiating}"
					Width="0.5*" />
				<DataGridCheckBoxColumn 
					Header="Rejected" 
					Binding="{Binding IsRejected}"
					Width="0.5*" />
				<DataGridCheckBoxColumn
					Header="Declined Offer"
					Binding="{Binding IsDeclinedOffer}"
					Width="0.5*" />
				<DataGridCheckBoxColumn
					Header="Accepted Offer"
					Binding="{Binding IsAcceptedOffer}"
					Width="0.5*" />
				<DataGridCheckBoxColumn 
					Header="Favourite" 
					Binding="{Binding IsFavourite}"
					Width="0.5*" />
			</DataGrid.Columns>
		</DataGrid>
	</DockPanel>
</UserControl>
